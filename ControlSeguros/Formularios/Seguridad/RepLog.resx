<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/2wBDAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQICAQECAQEBAgICAgICAgICAQICAgICAgICAgL/2wBDAQEBAQEBAQEBAQECAQEBAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgL/wAARCABJAG4DAREAAhEBAxEB/8QA
        HAAAAgMBAQEBAAAAAAAAAAAABwgFBgkKBAMC/8QASBAAAQQCAAQEAwMFDAgHAAAAAQIDBAUGEQAHEiEI
        EzFBFCJRIzJxCRU0YcEWJEJydYGRsbS10fA3OFJzdnehszM2Q7K2wvH/xAAcAQACAgMBAQAAAAAAAAAA
        AAACAwEEAAUGBwj/xAA5EQABAgQDBAkDAwMFAQAAAAABAhEAAyExBBJBUWFx8AUTIjKBkaGxwTNC0QYU
        cjTh8RUjQ2KSsv/aAAwDAQACEQMRAD8AUXB3FdklwdCVdyk6Udd9p7dz7euu++PcI+ZhaDkh8fDt6WSk
        jfqBrROgrfvo/id8IN9kTFPyCSEo6glY2O+tjpPfWifUb9/oeGIFNxjITbmq6FSge5KgkAFQII2rfqQB
        7fr4OCFvEXtAFsQhaCNkhIUCE9lKVrZBB9f8eATctUc+cGh9dY9EVo/CIKQenoGiCTsaOgR+PEEOFHT8
        QKxUloHN6jqsFg7JJ6SNb9gO4V6DR/X+3gVfbwizL7opEhjFSH57QLDjiS4n5x0oUFdukHatBXb3+nBI
        S1SIiYSzWMWrO6ZbAZ0hDf2ZR3U2elXclJI3tXfet6Pt+slAqDC8LlKrU3gd1cQocdB0VBCupSBoaAOv
        TWx6enAIFTuhyzQVjwSGOqRso2QrYJB7H29ux1/X+PAquYIGgJMfF1tZfRpKQABtSifw0dD6e/14iJi7
        Y+yevqPoE7Tok/eH+z/RrhoBCDvhMw33QSoEUFBHSsjW/lJBHftsHuOx4MW2xXJegFdYdLEErPlEpIHU
        kj5T7eh0D2AI9xxkCLCDawpXkJG9ka7HuPbXb3O/1+ntwpTZjGRUMmKwws7JJBJB1rY+hHof8+vBps2y
        MhMuZrpXLQkneikkAE/KB6fhvXbWuCgwzAGzwGbABOtkgH5hrX3ge3UodgNcCAxJA/tBoFKF4ko0hBjI
        BbVrp7jfbvrffXccQ7OCHb5haqKPN4HV02XbJzykqBUEjSiSQNAdvr316cCUvlatOfeLMsskbIJHLrH5
        8mc2tDIW71oW0A4Osnq0AkJ7nez9460PQ8MSCAxLmFzFA0B055pF05j0UsIaQ7Hc81CEfZEI6grRAB0n
        XR2+VOyQeJhaC3AXgNRY6qxb65EJRCgpvp2lLgURs7bPffY+3EMNA0PJcAPzxiGWkPSPs4skbI6QpspT
        3UQOpSyABsHvsD6kDvwJIFSLatEh7BXr+OfOPY1jtrNkfverlv8AzKSWmEF1zrQSlQS22VFSurfpsdu2
        +MKQSFfbGZ8oYmogo0OJPobQ2+w9BfUkENzozsN1SidENpfQkq1v2HBitRUQlRJJLsKVgix8VmQ2x5jC
        wVaAUEFSSO50kjfb/HvxkCFITq5POsMhhKwgNkgdkbBABIIAICtE6Gz+P6uMhYsINMZXmND5QCE7V063
        3+hH4/t1whQYkRMU3K+ryVlBV0gaUPl6iSB7geuxw1HdEZCV8y9JsElSBpwpKSDoEggaP0JI/p7cSd14
        JOnEwHpxWOrqASVq7HXok+gI3oJ36/8ATiA7l+efzDE1JvEzFaR8K2gDXy++yR6aGj6f08YACDvgFXJa
        h/PhsjwQcccs7VtptgyX5L6Wm2EoUCVkp6SkgHeyPQkJHcn3HEgMA9xSC6zKlnh+sd5TY3yexCFmXNq7
        i4siyjLfx7HktCTlWSutAfLU0ze3RECiEuSFoDaO/mKYHS4VGc6skodYoGp0HE7d0H1KyjrJh6tCrP3l
        bwOW3Qqmcc0v3QT5BoapNBVeYWI5kLD9sptGzt95IUhlRAT9m2XANf8AiKJO2h2reACAN8Cd6WhxRCnT
        1Kb6lFSj1OL0fM3o9ye3fp2e/wBRxMHEWWGnH2nnZM5tpLEhqZACmExbCL5MpTrGpKR8JLUlwoRJbUCl
        Kglxt1KU9ILFy9AKjQj4O/3g0GoSwckMdQdu8bj4EazsGDIS64+tyRJJcKQhLQbhR2kLcLbUZpsK0oJU
        lKnFuOLX5W9pSAgSkEXL/ECpQIa3uTrX2AAAgt43lOR1CWGoNvNQyCoKhS1NWdcsEAhDlbatPxyg9/8A
        0vf24kpB0+PaEOQSxcecHzHOZuOz4yomX4Ynz4xBasMQlxaoSVABJTLpblqTGYUUqJ8yI4wglOvh9HqS
        JCx3VONivyK+B84l0G6CP4t7H4PhEvhzS1Fog9W9HQ6tAemzsaJ7e5/p4OFiw3wa2ErDQSNp9Nn0+mgC
        D2G/pwlV3+ImKhkyFfDrGxtOz82yCRrv07IPr/136cNT3RGQlvMxYM0II0UEbKiRrYHbsO29g9vX68SQ
        9DBJq1Lk+0CWYNqT6qOuwHYFIIPuDv8AbvgCal9Pfn2hibkO7RYYfR0NKAUkAf7O9Dt6DXc73+PtwSbB
        hCjeNI6HA8Q8I/Lmi5n8zq2qynxCZ9Sxb/ldydstuRMExWzaL1RzM5sRmXEOR0S2+h2nogtqVYN6mSnI
        tf0Kl0jMXipi5UklEiWWXMF1KF0Szu+9dhYOq2wEqXhJaJ09ImT5oBlyj9qTaZNGgVeXLoVDtKZLZkQz
        nJMl5i3VrmWZX72QZJLKn59vaPMsqMOO39n0Dpaj1VLFQEtoZaSxFiM9JQhtpDnFxKES0hKEhKRz/kmp
        1imqYuYpSlqzLOtPIaMBYCmyLxjfhK5r5Lj6stm1asdoHHSzHmXCXGZU+RIcnQof5roWgidaQ1XEWviP
        T3DAr2vz9BlMTJcZ0LNZWJQVZJZzGz6DW+tC/gdRFvqFITnmjL/1+48RpUNWrkUqI8t3ydw/G8cC5UO7
        l378mbEcVcWyoLEZtibYNtTl1NOyy2thyrl1LqEvSpLgkVj7alKbdSoMCZhLlTpPhfhzQRXM1IoEt6+/
        hbaYGrlZjoDqo2O0K+pzym0sYzWOpaEpdihhLzj8R9xLanJwbDrjqSAWk7LqG1AurQGJ5sfj1iROWpwk
        sOJ38K/iBRbijfnvPR8dgxUR5i22341OxUsKVILstIYMNmMtDYRISpsBSekJ6f4DaUCmWijCobRtjmjb
        L7YeZqw/acKfV9rOC419IIeDY1e3U+PEx+4tIqFEKKLFa8lrGoI8jzZbkOyk/HIQiO3IdUlmcle3UoQh
        SiDxjLQKKJA0NRo+/wBdghSlS1MFoDnVPZOtKdnYO7tLwfazD88Ajx5OE5DaOuMOFmThVPdZnHWqHHqn
        bFmTCoq96xpH4z1vEjupmRgwZLMhhiZJcivBGCegUmESzvNPA+flA/tlrrJ/3UnSyhxGo3g6h2eCtg5V
        1Np190FJ6thKToH7xPb399fT14fFUWGkGxptSWQVrGik9JJ3vuT30fxP/wC8INzSkTFLypoPNHpUgHpI
        SASUq+X37/qH+e3DUWjITDmew61NS4VJUlRR1b7lJ3pJHV2UNp4IwSatuJ9qQHJSD1AklZ2FgAjsO3bv
        3H7da4WSxI287+EMBqRQfLwzvJpqiwynn87surYV1XYXaw6jl7iNq2H67Pua7sZNpXRbeMo/vrCMfrFM
        3N8gHUnzaun6kqt+psJhUrLJlnKVh1KF0osSNilHsp2F1fbDJKEgqxEwBSEHspNlruAdqUjtLGoyp+6K
        lYXGcc4M0nW13a2mW5tmlzY3F7c2jjkiwt57jS7C0s5y20HojMwI8hxSG2whmLBDMZnobaZ4YBLkywAB
        LlSwABoBYDm5vCz1k+aSombNmEkm5JNX5FqDZHSP4DvyWdBGh4dlvMiExLyXKDVyMbVkFGbehpLV+CvJ
        sUyO5q5kJ6BfWjiIMO0xirnCRjsyvF9jeXIhZ1GhJq+T6T6XUTMRL+nLdwCxUAcpFwQASyzRaVFExGaW
        S/b9D/p9hKmTvrTWCSQSlJIKkmxSSQM0sF0LT1kqYUTgAGy8RPIit5bcynMfXj1ROxrO+W2S1sqxnW7U
        a3l3C65GD1ciDLtbtLl5d0TMnBprFciNNsLKmrJry5sQUJFgvB4xc+SFJUUrlrGhsDmqAKBQzgmgCiAx
        zULpLo2VhMQpC0haJssgOQHJGQM5dSkHIoJqSgKJIynNzReJGgcwVDVbYJkuoiedXJcMldqwqLFWlMBT
        dsoFVn8xm/arKlFpLAcId6209dJVmS9gW4/209Y4SYjKrKe8KOLNox1jPOZeSZbrS6yJKcQxJalpUIz0
        hPmxn0uslaAyULQFoSe6SCOx78GoBQyl68YYkZTmoCIrEhc1SHEzES2+p5tzqkxnWElbbSIyVuuutAqP
        kJ6RskDZI1vsICRQcK7PKDLm7Ec8IabkFjOSXcxczGm1Pz4A85iEhpcyZLeZhSUQ46a6OQqxa+KdEl2O
        lSHJIrm2GldThIyaSlOZ2A59LwsBJXlIqrnjVgH0cx0SeHG8xrw44PkXM7mvh/MK1lX+SwuXk/N3qjE8
        cnQvhIM7KsFxZ/B5VlWya+0sMPlvZHYllny4q8ihosUsz5iIsbncV1mImpkyZgcAqapJrlJJAIoeyNpB
        IoI6jAol4WSqdPkkJJCXoACRmAAUQSSO0+gIBuGxMw1xSSjyyoBSgV+h6t/Un3IHsP2cdNHHiwg3srJj
        oB3odhokEDtvShvQ4SaKNImKdkrmmFkJSPdJHcp1semvmG+GpDACMhNuZ7ylykd9EFA1vR1oknv/AIa7
        8SYNIDDQk/ECH4V2RIbjxm1vyZTrUeOygkrflPupZjR0J13U5IWlA+pWPbhRAGtPzrBB2TR1c++2DNn8
        1Dz1DhFdIQvH+XNevGoLjR6GLC3dmKsM6yVY2At+xykytLPcwKquZ30RkBMy0sCohlLqeADAeA9SdsEt
        bFKBVMsMNjmqj4n0AGkaxfkr/DFHzbKJPN7JMel3tHi9oxEo6pmqnXDd7l9WxCyj4CNCrpUc3Ix2mVVZ
        BPg11rU5fEsrDHLigZtfzBZV7+l6YxRSOoQsIcOouAwNA5LtmNASlUsjMleXMCOh6AwQWr91Ml5wkkID
        EuQHJABBVlHaZKkzQcq5ebKUnr95Mc5sVZyiXykh0M+tisZDkNHWZXOvKCXY5rlsGhZzrIb7Jccro0aZ
        VSr2okTLqJbPMKavhHkz5PwcuS01I4bFYaYUDElWYsklLHspJyAJUSQQgskpBdAYBwKem4HHSkzThAgg
        BSgFlSSVrCRMUpaAAQZgdYWQ0ypOVRYw/jKmYfVctbkWD0Jd7YVNlIqoD02NAaMKIltu0vLuyfIbosZi
        JdaTJnu7+0kNQ4zUubIZiON6JE1WIRlByJIc1NTYAaqOg2VLAPFX9QjDowi8yh1i0kpBIFB3lKJ7qE6q
        OpCQFKISeGbxH86MRzDMLWiwuJkHNqdT2D0R6Hi8GHFxyqsUKV1RWptk64xXlI8sJQ+LG2d6kuGBG6g2
        j0iSFS0MUuo3A04mz7ha1Y8dmpC5hUV5UGxIZ/4puRsJZ7loX6v5Q+IzJFqlRuRdBjMN9Acbcyu9elSU
        9RBK0N39xVNJ+U6KUxulJI0lIPB9adSkcHV6hhECUjUqJ8Ej1eJJfI/nnVPMm85eV6acOqRNsqGIbFuq
        Uvy/h1yv3GZVayktFzYUPgB0JO9rJIGCa5IzJPmH82EYqUlnAI0NQfYPDo+HZ7l/yTzTFcp5rYZNxGkm
        WkNuDzJqXlZJyqyCQw+n4isy+xo4i5OMTgB0LcMRU2EsBcqreaSRxXxJXNRMRJLqbumitxD0PiQDoQ8P
        wolypsqbPcy3ooF00uFM5HgCUm6TaOtvlPE8OXNWBH5n4riWHWuQvUlZTW860qKG5v4NfKixJVdGkSW0
        yIdpUyYlbCcg2sQus2MWuaS1JIiKixOExP7zDqMmatSUuSGJAPCxBD1SagmoqCfUcF/p2LlpnyZaSrKA
        pwCobAWcEEAZVCigKGjDigwkNr8rr0dJ3ohPTsd+2vfX8/HpUePCwg0MhBbHTv0BOzsD3A0P1a/HhBcF
        ueebRMU3Kz0MrACVBSTtW9gbA99enYj8Dw1NhGQlfMrpFjrahopKUkAnQA6tfL37717jXEm0ELCmpip4
        XITEyNu3c6inHYFpfNA6IcsYER1NGNkaAF9Iq1nezpo678KIBJ1c/NfSDT2QVGpq3HT1j0VyGTIZMgh5
        hoLek9brTZfYitOSZLfmvuJQh11plxAK1JT1up6lDe+GqOVJOwPAJSVqSgCqiB5x2L+BXCMW5dcq0cur
        RTse7c5fIpsnlwo1nj97Mj5amTbZm9EvnKKNJcrn8tubJqME22SQ4SWQ7SWkJl4w0cXj88xYmipKszFi
        HBo4c1AGxJNlA3j0Lo0ypKFSO6yMtHScpuysoNVHasA1SoO0aA4tknLPkHht3kbLVY3jeHV85WL18Opq
        k2+IYjI+FXD5UYlfFr4l3Fk3pU3UQluBuGm3ZgJSqPFYKNYuTiMVMRLY5phGYuWUof8AIpIoFN3jqz3J
        jcSsThcDKmzqGXJBKQAMyUaSkqvkzd1JPZcJsBGDGX8zObP5TXxOWnh+p8gm0XLeBIbtud2T0thIjQnI
        8NTy63B664Ck/m/F6ysclIStvpdUhbsxrpsbhySz06JWH6IwnWlIUsBkjUk+uZVH2BhZLRxUyfi/1Bjx
        JK8qJhdVeyEpe5tklgkJBucyu8YN/PPAfB94boZr+V0HGMS5Z4XCgNZFn12Y9JGkzI0OPCkuquZCfNgV
        AnuRtQYKQ/LWJ0oiYtClJVhJ2Nnoz4kstbkIFgHoGoCW1NqCkN6Qw/RuHmiVgu3KQ2aYp3WpmJe4S9kp
        DllHtBmy6zr8on4cq2RNg4biV1eVzaimPl9lGi4RSyk9Kg0uA5fBM6zWptqCNllgqL0stgpLauNmjDzS
        ypkzIDtr8tyI1EybLHZlysz7KejE7HdtdsBKt8X3KXmXlSK2nXLpriQw6uG3Gsq2c64+tmQ04A+yoFwu
        OTLZa0+YFLVNSrpJSUuWEoagWF7rU4Od0VJmYdoyikHW/wADaX4w5vKjxFYxjlZc4DzqwyvzbljzAkw4
        2S3UWuZetoMpbJiwbEh1HU9PaZcV5bU1IU8z0MurU2lv4WtiMMpZTMw6+rnSwWB7p3HcdSGIuK3s4TGS
        pQXJxMrrZE0jMR3knRSX1G+hFDQhv2ea+Zfk7sueo6zNM1tOR2c0qsh5PZXgVwI1pXU93Lj2rmPQZtlH
        e87EZfSZaojzZdgWNa82FokOWSpKVSJXSUoGbKT10sstKg7KDirajQ2Ukg7GtJxGI6KmqTh5yupmJdCk
        FsyFFwQ70LVSapUDrmfPzDy59lsFKew2UqPbXchX8H0+nG6jQi0GqOopaGu6iAO/zDXb1+p+nCzcl/Xj
        yYmKhk5WY7g0T6qUAAT2HsSTofzenBp7ojIS/mb0rmtD+EggjQJ0PXYPvo/19+JPlBJYMX1PsIo0BRRC
        vnE9iuLVRAQQVFMi4jvrHY+hEEb4D7hSvPOsE4L7T4258YJXJ+JHseZ3LuukhYiT86wiDJHmeWpTEvNM
        fEwJUmyhkKMFMxPaQklLhI2CeFYskYeY2obzLQ7BB8VKf7XP/kE7tkdS2Pc9MZwrEaWonRp6n3cfuuZG
        QzYn5oqq+shTMi+AmTXoM2NSPXlsH3fMlx4Na/YNMMiTKLpeYfl8+qQpUwkUdgNdNrltgcgcLDpxiUy5
        YBckOTUDXwfewJ4wGvHPzvsMW5V01HWz3TMyO8mS1eW+etSKSK18GpRHctotLeFJ7j71ak62OLPR+HSq
        apZsgD1v6AjxjX9K4o/t0SkqYzFOeCfW5BgT+AeVWcnvDBdZlLs4tVYczBlWYZpkrvmOPw8cr1Oy5i3p
        LJC1RGYkWQVtpPU4mE2whJKwAePT12IQkjMJTMNqju9B/iB6OmCRhpqknKZzpJ1CE/FydttYwn8Yfiqy
        XxD8xsinmus7PBeVceFc1WISHHTTY0zbyHK7D2LRUNhabDmZcKcXJs5QUUV0JuYhhxpoJSbstCJAyBOe
        YA6iBR9ADsfyF62qrK8QBNWsS5a1FKATUgDtFuGuqiwDPGV3MTm9zbu8vhQ8syGSzEqrSG7XYlBjwmMb
        rPNWhbPw1XFb6JTnklKQ88HXj191qOzxWmzZ4nJC1NUMGEbbD4XBnBrVLl5lZVOokhRIFf4+kbYTMMw3
        NcPoGsto8euZ0qjq31SE0lW09HffgtOq8ucwwh5hQcV0trbdASWz3B0RtilJukRywWtJ7KyPExD1MXMO
        UzEqTS3Nrm2DRY6jY4LkDgvLWHTpIekHFrmaC7MS0wH1Jqpy3m5Ab1Ekw5QZeAKltVJJbT8H4PnBhQWe
        0AhR1FB4i3iGa7RqZ4esPZ8S+PDk9NsBe47jFZWczeVtnMkteZW43dfEQspx9mZJ6fi4wsLfGZrZVpRb
        tESOhDsmSka/ETE4ZQxADdb2VBjUgApUw3OPBtI2GEkHGpVhCokyO0mvdBJC010zZTxJ2mM9sJWE+UVD
        WkdjobBHfR0TrufXt+HG1jUiwgzxleY0ClOj0g7SO53sgg7/AM64SQyomKdlfV5Ky2VdABCxodRJAOvx
        2P2+vDU2EZCV8zB02AKka8wpKSD09RGk+u/lJIP8/Eng8El6bXPxA/hKJi3aVjpUlmrfb12PQ1ZoYc7e
        +jMaJPrwIfMX5GkGzggHnlviCZyhnM13MvlvYSVFMaFzC5fyH1acUAyvNKSI6Slo9RR0yyVdj2B7e4Vi
        Q8iZuY+RENwRbEywdcw80kbR7xv6zg2RXFXiczCMrpMaqWqyyRb0KqCIhiTmUVyzhV2V+fVVTSp01l5y
        L8XFlIabmt00VtxxsdZOpoD2kk/jZ/jXSNuXIopgX8+dr8YWX8oI/KrmeXMxpa3YLwzOClKz1o+NVCgy
        GUb6/mUUlBA2d9BPfXF3AsetGtPKsa/HBzKNxX4hRLTnMuv8A+H0cCW447c/uf5eWjTT7Sn3K2HmLtpl
        TCEL+YvuQqjodS2lRDc7alNdQcSZlviAu4Bf0Yc7oFMw9VMluzgjwJf+0B7k/J5c+HDmHf4FzTyCA5R8
        0sU5bc6bDL7SOHk2bmT0Jn2+PoaYLpfagrly48dAK1LcYUCEqcKUyk0WUllklnN2oa802wE0FfUk1loZ
        LDQUPm3rGa/NTG8HzLnhYWVHHvmOWDeQTxQyb2C7XKl1SXzOirlTm2NNFJHR5bfUoIDYWUK6tLVLE2cg
        zBQX2Pe97++yL0jELw2GmIlkGZM8VAVFrORrt2xotyL518hEriUdmbyXHjseU+WbiOtmI+hSUKixi8FB
        EALAUOpXVpHr82jcK84IlrGYRq1SloLzEFjsp8Q5Vnzv8KuHxEWzEwzn47K0sxnXowk+W+0tgKmMLUUy
        NEuH069OBJ2VEoTlnl8ywkbebRI6r7UKVx58aQCk878ewjBsTyLk1Z5BS0K8i5k4rTvNyH/zl+5KLcU9
        tQxH5KSnzEsrlTIQ7jrjY/BKklSFK4lMsLcTAJgobBn7QLPzUxKlKSrMgmUuoNWLFiHO278BrHwxH0b/
        AI3/ANRxZiqjuiDTXfcT/uk/s4BdhxgoqWU/oi/4w4OMhMOZP6ZH/FX/AHUcQbeI94NNhx+RFAY+7Yfy
        Ov8Avam4zU8B8wzU8B8xIw/0iD/KOP8A/wAhqeFz/ozf4mMwv9Vh/wCY+Y6aOT3/AJIp/wCUch/vyz40
        pv4D2jdr7xhQPyjn+jzl7/xxL/uBXF3A9+ZwHvFHG/Tl8Vf/ADGZOP8A+ptL/wCc0v8A7cviwr6vn8xW
        HcXxHzCW8xv9KHKr/lfSf2+bxk76qOHzDZX9LO/n8RYvG36csP8AgWq/sTnC5/cRxPsIPAXmcE/EKHyd
        /TZ/8aP/AFL4Xhe+rj8xd6S7yeB+ItGZfp8n/eD/ANp4ZP744/Jilh7DiPcw2kD/AFbeTv8AL2d/22Lw
        +R3Efx+YrzvrzeI9o//Z
</value>
  </data>
</root>