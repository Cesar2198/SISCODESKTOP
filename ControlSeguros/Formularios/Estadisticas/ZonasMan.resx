<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>