'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.5485
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsCorrespondencia"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsCorrespondencia
    Inherits Global.System.Data.DataSet
    
    Private tableCorrespondencia As CorrespondenciaDataTable
    
    Private tableImagenes As ImagenesDataTable
    
    Private tableLlamadas As LlamadasDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("Correspondencia")) Is Nothing) Then
                MyBase.Tables.Add(New CorrespondenciaDataTable(ds.Tables("Correspondencia")))
            End If
            If (Not (ds.Tables("Imagenes")) Is Nothing) Then
                MyBase.Tables.Add(New ImagenesDataTable(ds.Tables("Imagenes")))
            End If
            If (Not (ds.Tables("Llamadas")) Is Nothing) Then
                MyBase.Tables.Add(New LlamadasDataTable(ds.Tables("Llamadas")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Correspondencia() As CorrespondenciaDataTable
        Get
            Return Me.tableCorrespondencia
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Imagenes() As ImagenesDataTable
        Get
            Return Me.tableImagenes
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Llamadas() As LlamadasDataTable
        Get
            Return Me.tableLlamadas
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsCorrespondencia = CType(MyBase.Clone,dsCorrespondencia)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("Correspondencia")) Is Nothing) Then
                MyBase.Tables.Add(New CorrespondenciaDataTable(ds.Tables("Correspondencia")))
            End If
            If (Not (ds.Tables("Imagenes")) Is Nothing) Then
                MyBase.Tables.Add(New ImagenesDataTable(ds.Tables("Imagenes")))
            End If
            If (Not (ds.Tables("Llamadas")) Is Nothing) Then
                MyBase.Tables.Add(New LlamadasDataTable(ds.Tables("Llamadas")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableCorrespondencia = CType(MyBase.Tables("Correspondencia"),CorrespondenciaDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCorrespondencia) Is Nothing) Then
                Me.tableCorrespondencia.InitVars
            End If
        End If
        Me.tableImagenes = CType(MyBase.Tables("Imagenes"),ImagenesDataTable)
        If (initTable = true) Then
            If (Not (Me.tableImagenes) Is Nothing) Then
                Me.tableImagenes.InitVars
            End If
        End If
        Me.tableLlamadas = CType(MyBase.Tables("Llamadas"),LlamadasDataTable)
        If (initTable = true) Then
            If (Not (Me.tableLlamadas) Is Nothing) Then
                Me.tableLlamadas.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsCorrespondencia"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsCorrespondencia.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableCorrespondencia = New CorrespondenciaDataTable
        MyBase.Tables.Add(Me.tableCorrespondencia)
        Me.tableImagenes = New ImagenesDataTable
        MyBase.Tables.Add(Me.tableImagenes)
        Me.tableLlamadas = New LlamadasDataTable
        MyBase.Tables.Add(Me.tableLlamadas)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeCorrespondencia() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeImagenes() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeLlamadas() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsCorrespondencia = New dsCorrespondencia
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub CorrespondenciaRowChangeEventHandler(ByVal sender As Object, ByVal e As CorrespondenciaRowChangeEvent)
    
    Public Delegate Sub ImagenesRowChangeEventHandler(ByVal sender As Object, ByVal e As ImagenesRowChangeEvent)
    
    Public Delegate Sub LlamadasRowChangeEventHandler(ByVal sender As Object, ByVal e As LlamadasRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CorrespondenciaDataTable
        Inherits Global.System.Data.TypedTableBase(Of CorrespondenciaRow)
        
        Private columnIdFlujoDoc As Global.System.Data.DataColumn
        
        Private columnFlujo As Global.System.Data.DataColumn
        
        Private columnComentario As Global.System.Data.DataColumn
        
        Private columnEstadoFlujo As Global.System.Data.DataColumn
        
        Private columnFechaInicia As Global.System.Data.DataColumn
        
        Private columnFechaFinaliza As Global.System.Data.DataColumn
        
        Private columnNombreCliente As Global.System.Data.DataColumn
        
        Private columnIdUsuarioSolicita As Global.System.Data.DataColumn
        
        Private columnIdUsuarioDestino As Global.System.Data.DataColumn
        
        Private columnDireccion As Global.System.Data.DataColumn
        
        Private columnCiudad As Global.System.Data.DataColumn
        
        Private columnZona As Global.System.Data.DataColumn
        
        Private columnCategoriaFlujo As Global.System.Data.DataColumn
        
        Private columnTipoFlujo As Global.System.Data.DataColumn
        
        Private columnPasoActual As Global.System.Data.DataColumn
        
        Private columnSiguientePaso As Global.System.Data.DataColumn
        
        Private columnFechaPrimerPaso As Global.System.Data.DataColumn
        
        Private columnFechaUltimoPaso As Global.System.Data.DataColumn
        
        Private columnIdImpresion As Global.System.Data.DataColumn
        
        Private columnFechaImpresion As Global.System.Data.DataColumn
        
        Private columnFechaEnvio As Global.System.Data.DataColumn
        
        Private columnIdUsuarioImprime As Global.System.Data.DataColumn
        
        Private columnIdDestinatario As Global.System.Data.DataColumn
        
        Private columnDescripcionImpresion As Global.System.Data.DataColumn
        
        Private columnCourier As Global.System.Data.DataColumn
        
        Private columnIdUsuarioEntrega As Global.System.Data.DataColumn
        
        Private columnAseguradora As Global.System.Data.DataColumn
        
        Private columnNombreDestinatario As Global.System.Data.DataColumn
        
        Private columnNombreAttDoc As Global.System.Data.DataColumn
        
        Private columnRecibeCorrespondencia As Global.System.Data.DataColumn
        
        Private columnNombreAseguradora As Global.System.Data.DataColumn
        
        Private columnNombreClienteFlujo As Global.System.Data.DataColumn
        
        Private columnTipoDocumento As Global.System.Data.DataColumn
        
        Private columnCantidadDocumentos As Global.System.Data.DataColumn
        
        Private columnFechaPrimerRuteo As Global.System.Data.DataColumn
        
        Private columnFechaMovimiento As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Correspondencia"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IdFlujoDocColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdFlujoDoc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FlujoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFlujo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ComentarioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnComentario
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EstadoFlujoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEstadoFlujo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FechaIniciaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaInicia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FechaFinalizaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaFinaliza
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NombreClienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNombreCliente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IdUsuarioSolicitaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdUsuarioSolicita
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IdUsuarioDestinoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdUsuarioDestino
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DireccionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDireccion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CiudadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCiudad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ZonaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZona
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CategoriaFlujoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCategoriaFlujo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TipoFlujoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoFlujo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PasoActualColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPasoActual
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SiguientePasoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSiguientePaso
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FechaPrimerPasoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaPrimerPaso
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FechaUltimoPasoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaUltimoPaso
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IdImpresionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdImpresion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FechaImpresionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaImpresion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FechaEnvioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaEnvio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IdUsuarioImprimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdUsuarioImprime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IdDestinatarioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdDestinatario
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DescripcionImpresionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescripcionImpresion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CourierColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCourier
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IdUsuarioEntregaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdUsuarioEntrega
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AseguradoraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAseguradora
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NombreDestinatarioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNombreDestinatario
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NombreAttDocColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNombreAttDoc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RecibeCorrespondenciaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRecibeCorrespondencia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NombreAseguradoraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNombreAseguradora
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NombreClienteFlujoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNombreClienteFlujo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TipoDocumentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoDocumento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CantidadDocumentosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCantidadDocumentos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FechaPrimerRuteoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaPrimerRuteo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FechaMovimientoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaMovimiento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CorrespondenciaRow
            Get
                Return CType(Me.Rows(index),CorrespondenciaRow)
            End Get
        End Property
        
        Public Event CorrespondenciaRowChanging As CorrespondenciaRowChangeEventHandler
        
        Public Event CorrespondenciaRowChanged As CorrespondenciaRowChangeEventHandler
        
        Public Event CorrespondenciaRowDeleting As CorrespondenciaRowChangeEventHandler
        
        Public Event CorrespondenciaRowDeleted As CorrespondenciaRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddCorrespondenciaRow(ByVal row As CorrespondenciaRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddCorrespondenciaRow( _
                    ByVal IdFlujoDoc As String,  _
                    ByVal Flujo As String,  _
                    ByVal Comentario As String,  _
                    ByVal EstadoFlujo As String,  _
                    ByVal FechaInicia As Date,  _
                    ByVal FechaFinaliza As Date,  _
                    ByVal NombreCliente As String,  _
                    ByVal IdUsuarioSolicita As String,  _
                    ByVal IdUsuarioDestino As String,  _
                    ByVal Direccion As String,  _
                    ByVal Ciudad As String,  _
                    ByVal Zona As String,  _
                    ByVal CategoriaFlujo As String,  _
                    ByVal TipoFlujo As String,  _
                    ByVal PasoActual As String,  _
                    ByVal SiguientePaso As String,  _
                    ByVal FechaPrimerPaso As Date,  _
                    ByVal FechaUltimoPaso As Date,  _
                    ByVal IdImpresion As String,  _
                    ByVal FechaImpresion As Date,  _
                    ByVal FechaEnvio As Date,  _
                    ByVal IdUsuarioImprime As String,  _
                    ByVal IdDestinatario As String,  _
                    ByVal DescripcionImpresion As String,  _
                    ByVal Courier As String,  _
                    ByVal IdUsuarioEntrega As String,  _
                    ByVal Aseguradora As String,  _
                    ByVal NombreDestinatario As String,  _
                    ByVal NombreAttDoc As String,  _
                    ByVal RecibeCorrespondencia As String,  _
                    ByVal NombreAseguradora As String,  _
                    ByVal NombreClienteFlujo As String,  _
                    ByVal TipoDocumento As String,  _
                    ByVal CantidadDocumentos As Integer,  _
                    ByVal FechaPrimerRuteo As Date,  _
                    ByVal FechaMovimiento As Date) As CorrespondenciaRow
            Dim rowCorrespondenciaRow As CorrespondenciaRow = CType(Me.NewRow,CorrespondenciaRow)
            Dim columnValuesArray() As Object = New Object() {IdFlujoDoc, Flujo, Comentario, EstadoFlujo, FechaInicia, FechaFinaliza, NombreCliente, IdUsuarioSolicita, IdUsuarioDestino, Direccion, Ciudad, Zona, CategoriaFlujo, TipoFlujo, PasoActual, SiguientePaso, FechaPrimerPaso, FechaUltimoPaso, IdImpresion, FechaImpresion, FechaEnvio, IdUsuarioImprime, IdDestinatario, DescripcionImpresion, Courier, IdUsuarioEntrega, Aseguradora, NombreDestinatario, NombreAttDoc, RecibeCorrespondencia, NombreAseguradora, NombreClienteFlujo, TipoDocumento, CantidadDocumentos, FechaPrimerRuteo, FechaMovimiento}
            rowCorrespondenciaRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCorrespondenciaRow)
            Return rowCorrespondenciaRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CorrespondenciaDataTable = CType(MyBase.Clone,CorrespondenciaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CorrespondenciaDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnIdFlujoDoc = MyBase.Columns("IdFlujoDoc")
            Me.columnFlujo = MyBase.Columns("Flujo")
            Me.columnComentario = MyBase.Columns("Comentario")
            Me.columnEstadoFlujo = MyBase.Columns("EstadoFlujo")
            Me.columnFechaInicia = MyBase.Columns("FechaInicia")
            Me.columnFechaFinaliza = MyBase.Columns("FechaFinaliza")
            Me.columnNombreCliente = MyBase.Columns("NombreCliente")
            Me.columnIdUsuarioSolicita = MyBase.Columns("IdUsuarioSolicita")
            Me.columnIdUsuarioDestino = MyBase.Columns("IdUsuarioDestino")
            Me.columnDireccion = MyBase.Columns("Direccion")
            Me.columnCiudad = MyBase.Columns("Ciudad")
            Me.columnZona = MyBase.Columns("Zona")
            Me.columnCategoriaFlujo = MyBase.Columns("CategoriaFlujo")
            Me.columnTipoFlujo = MyBase.Columns("TipoFlujo")
            Me.columnPasoActual = MyBase.Columns("PasoActual")
            Me.columnSiguientePaso = MyBase.Columns("SiguientePaso")
            Me.columnFechaPrimerPaso = MyBase.Columns("FechaPrimerPaso")
            Me.columnFechaUltimoPaso = MyBase.Columns("FechaUltimoPaso")
            Me.columnIdImpresion = MyBase.Columns("IdImpresion")
            Me.columnFechaImpresion = MyBase.Columns("FechaImpresion")
            Me.columnFechaEnvio = MyBase.Columns("FechaEnvio")
            Me.columnIdUsuarioImprime = MyBase.Columns("IdUsuarioImprime")
            Me.columnIdDestinatario = MyBase.Columns("IdDestinatario")
            Me.columnDescripcionImpresion = MyBase.Columns("DescripcionImpresion")
            Me.columnCourier = MyBase.Columns("Courier")
            Me.columnIdUsuarioEntrega = MyBase.Columns("IdUsuarioEntrega")
            Me.columnAseguradora = MyBase.Columns("Aseguradora")
            Me.columnNombreDestinatario = MyBase.Columns("NombreDestinatario")
            Me.columnNombreAttDoc = MyBase.Columns("NombreAttDoc")
            Me.columnRecibeCorrespondencia = MyBase.Columns("RecibeCorrespondencia")
            Me.columnNombreAseguradora = MyBase.Columns("NombreAseguradora")
            Me.columnNombreClienteFlujo = MyBase.Columns("NombreClienteFlujo")
            Me.columnTipoDocumento = MyBase.Columns("TipoDocumento")
            Me.columnCantidadDocumentos = MyBase.Columns("CantidadDocumentos")
            Me.columnFechaPrimerRuteo = MyBase.Columns("FechaPrimerRuteo")
            Me.columnFechaMovimiento = MyBase.Columns("FechaMovimiento")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnIdFlujoDoc = New Global.System.Data.DataColumn("IdFlujoDoc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdFlujoDoc)
            Me.columnFlujo = New Global.System.Data.DataColumn("Flujo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFlujo)
            Me.columnComentario = New Global.System.Data.DataColumn("Comentario", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComentario)
            Me.columnEstadoFlujo = New Global.System.Data.DataColumn("EstadoFlujo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEstadoFlujo)
            Me.columnFechaInicia = New Global.System.Data.DataColumn("FechaInicia", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaInicia)
            Me.columnFechaFinaliza = New Global.System.Data.DataColumn("FechaFinaliza", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaFinaliza)
            Me.columnNombreCliente = New Global.System.Data.DataColumn("NombreCliente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNombreCliente)
            Me.columnIdUsuarioSolicita = New Global.System.Data.DataColumn("IdUsuarioSolicita", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdUsuarioSolicita)
            Me.columnIdUsuarioDestino = New Global.System.Data.DataColumn("IdUsuarioDestino", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdUsuarioDestino)
            Me.columnDireccion = New Global.System.Data.DataColumn("Direccion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDireccion)
            Me.columnCiudad = New Global.System.Data.DataColumn("Ciudad", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCiudad)
            Me.columnZona = New Global.System.Data.DataColumn("Zona", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZona)
            Me.columnCategoriaFlujo = New Global.System.Data.DataColumn("CategoriaFlujo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCategoriaFlujo)
            Me.columnTipoFlujo = New Global.System.Data.DataColumn("TipoFlujo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoFlujo)
            Me.columnPasoActual = New Global.System.Data.DataColumn("PasoActual", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPasoActual)
            Me.columnSiguientePaso = New Global.System.Data.DataColumn("SiguientePaso", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSiguientePaso)
            Me.columnFechaPrimerPaso = New Global.System.Data.DataColumn("FechaPrimerPaso", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaPrimerPaso)
            Me.columnFechaUltimoPaso = New Global.System.Data.DataColumn("FechaUltimoPaso", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaUltimoPaso)
            Me.columnIdImpresion = New Global.System.Data.DataColumn("IdImpresion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdImpresion)
            Me.columnFechaImpresion = New Global.System.Data.DataColumn("FechaImpresion", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaImpresion)
            Me.columnFechaEnvio = New Global.System.Data.DataColumn("FechaEnvio", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaEnvio)
            Me.columnIdUsuarioImprime = New Global.System.Data.DataColumn("IdUsuarioImprime", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdUsuarioImprime)
            Me.columnIdDestinatario = New Global.System.Data.DataColumn("IdDestinatario", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdDestinatario)
            Me.columnDescripcionImpresion = New Global.System.Data.DataColumn("DescripcionImpresion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescripcionImpresion)
            Me.columnCourier = New Global.System.Data.DataColumn("Courier", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCourier)
            Me.columnIdUsuarioEntrega = New Global.System.Data.DataColumn("IdUsuarioEntrega", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdUsuarioEntrega)
            Me.columnAseguradora = New Global.System.Data.DataColumn("Aseguradora", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAseguradora)
            Me.columnNombreDestinatario = New Global.System.Data.DataColumn("NombreDestinatario", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNombreDestinatario)
            Me.columnNombreAttDoc = New Global.System.Data.DataColumn("NombreAttDoc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNombreAttDoc)
            Me.columnRecibeCorrespondencia = New Global.System.Data.DataColumn("RecibeCorrespondencia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRecibeCorrespondencia)
            Me.columnNombreAseguradora = New Global.System.Data.DataColumn("NombreAseguradora", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNombreAseguradora)
            Me.columnNombreClienteFlujo = New Global.System.Data.DataColumn("NombreClienteFlujo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNombreClienteFlujo)
            Me.columnTipoDocumento = New Global.System.Data.DataColumn("TipoDocumento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoDocumento)
            Me.columnCantidadDocumentos = New Global.System.Data.DataColumn("CantidadDocumentos", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCantidadDocumentos)
            Me.columnFechaPrimerRuteo = New Global.System.Data.DataColumn("FechaPrimerRuteo", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaPrimerRuteo)
            Me.columnFechaMovimiento = New Global.System.Data.DataColumn("FechaMovimiento", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaMovimiento)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewCorrespondenciaRow() As CorrespondenciaRow
            Return CType(Me.NewRow,CorrespondenciaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CorrespondenciaRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CorrespondenciaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CorrespondenciaRowChangedEvent) Is Nothing) Then
                RaiseEvent CorrespondenciaRowChanged(Me, New CorrespondenciaRowChangeEvent(CType(e.Row,CorrespondenciaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CorrespondenciaRowChangingEvent) Is Nothing) Then
                RaiseEvent CorrespondenciaRowChanging(Me, New CorrespondenciaRowChangeEvent(CType(e.Row,CorrespondenciaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CorrespondenciaRowDeletedEvent) Is Nothing) Then
                RaiseEvent CorrespondenciaRowDeleted(Me, New CorrespondenciaRowChangeEvent(CType(e.Row,CorrespondenciaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CorrespondenciaRowDeletingEvent) Is Nothing) Then
                RaiseEvent CorrespondenciaRowDeleting(Me, New CorrespondenciaRowChangeEvent(CType(e.Row,CorrespondenciaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveCorrespondenciaRow(ByVal row As CorrespondenciaRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCorrespondencia = New dsCorrespondencia
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CorrespondenciaDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ImagenesDataTable
        Inherits Global.System.Data.TypedTableBase(Of ImagenesRow)
        
        Private columnLogo As Global.System.Data.DataColumn
        
        Private columnSello As Global.System.Data.DataColumn
        
        Private columnLogo2 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Imagenes"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LogoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLogo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SelloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSello
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Logo2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnLogo2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ImagenesRow
            Get
                Return CType(Me.Rows(index),ImagenesRow)
            End Get
        End Property
        
        Public Event ImagenesRowChanging As ImagenesRowChangeEventHandler
        
        Public Event ImagenesRowChanged As ImagenesRowChangeEventHandler
        
        Public Event ImagenesRowDeleting As ImagenesRowChangeEventHandler
        
        Public Event ImagenesRowDeleted As ImagenesRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddImagenesRow(ByVal row As ImagenesRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddImagenesRow(ByVal Logo() As Byte, ByVal Sello() As Byte, ByVal Logo2() As Byte) As ImagenesRow
            Dim rowImagenesRow As ImagenesRow = CType(Me.NewRow,ImagenesRow)
            Dim columnValuesArray() As Object = New Object() {Logo, Sello, Logo2}
            rowImagenesRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowImagenesRow)
            Return rowImagenesRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ImagenesDataTable = CType(MyBase.Clone,ImagenesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ImagenesDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnLogo = MyBase.Columns("Logo")
            Me.columnSello = MyBase.Columns("Sello")
            Me.columnLogo2 = MyBase.Columns("Logo2")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnLogo = New Global.System.Data.DataColumn("Logo", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLogo)
            Me.columnSello = New Global.System.Data.DataColumn("Sello", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSello)
            Me.columnLogo2 = New Global.System.Data.DataColumn("Logo2", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLogo2)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewImagenesRow() As ImagenesRow
            Return CType(Me.NewRow,ImagenesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ImagenesRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ImagenesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ImagenesRowChangedEvent) Is Nothing) Then
                RaiseEvent ImagenesRowChanged(Me, New ImagenesRowChangeEvent(CType(e.Row,ImagenesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ImagenesRowChangingEvent) Is Nothing) Then
                RaiseEvent ImagenesRowChanging(Me, New ImagenesRowChangeEvent(CType(e.Row,ImagenesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ImagenesRowDeletedEvent) Is Nothing) Then
                RaiseEvent ImagenesRowDeleted(Me, New ImagenesRowChangeEvent(CType(e.Row,ImagenesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ImagenesRowDeletingEvent) Is Nothing) Then
                RaiseEvent ImagenesRowDeleting(Me, New ImagenesRowChangeEvent(CType(e.Row,ImagenesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveImagenesRow(ByVal row As ImagenesRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCorrespondencia = New dsCorrespondencia
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ImagenesDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class LlamadasDataTable
        Inherits Global.System.Data.TypedTableBase(Of LlamadasRow)
        
        Private columnFecha As Global.System.Data.DataColumn
        
        Private columnHora As Global.System.Data.DataColumn
        
        Private columnUsuarioGraba As Global.System.Data.DataColumn
        
        Private columnUsuarioPara As Global.System.Data.DataColumn
        
        Private columnPersonaLlama As Global.System.Data.DataColumn
        
        Private columnLugar As Global.System.Data.DataColumn
        
        Private columnTelefono As Global.System.Data.DataColumn
        
        Private columnEMail As Global.System.Data.DataColumn
        
        Private columnCliente As Global.System.Data.DataColumn
        
        Private columnObservaciones As Global.System.Data.DataColumn
        
        Private columnSePasoLlamada As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Llamadas"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FechaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFecha
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HoraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHora
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UsuarioGrabaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUsuarioGraba
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UsuarioParaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUsuarioPara
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PersonaLlamaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPersonaLlama
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LugarColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLugar
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TelefonoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTelefono
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EMailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ClienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCliente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ObservacionesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnObservaciones
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SePasoLlamadaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSePasoLlamada
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As LlamadasRow
            Get
                Return CType(Me.Rows(index),LlamadasRow)
            End Get
        End Property
        
        Public Event LlamadasRowChanging As LlamadasRowChangeEventHandler
        
        Public Event LlamadasRowChanged As LlamadasRowChangeEventHandler
        
        Public Event LlamadasRowDeleting As LlamadasRowChangeEventHandler
        
        Public Event LlamadasRowDeleted As LlamadasRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddLlamadasRow(ByVal row As LlamadasRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddLlamadasRow(ByVal Fecha As Date, ByVal Hora As Date, ByVal UsuarioGraba As String, ByVal UsuarioPara As String, ByVal PersonaLlama As String, ByVal Lugar As String, ByVal Telefono As String, ByVal EMail As String, ByVal Cliente As String, ByVal Observaciones As String, ByVal SePasoLlamada As String) As LlamadasRow
            Dim rowLlamadasRow As LlamadasRow = CType(Me.NewRow,LlamadasRow)
            Dim columnValuesArray() As Object = New Object() {Fecha, Hora, UsuarioGraba, UsuarioPara, PersonaLlama, Lugar, Telefono, EMail, Cliente, Observaciones, SePasoLlamada}
            rowLlamadasRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowLlamadasRow)
            Return rowLlamadasRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As LlamadasDataTable = CType(MyBase.Clone,LlamadasDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New LlamadasDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnFecha = MyBase.Columns("Fecha")
            Me.columnHora = MyBase.Columns("Hora")
            Me.columnUsuarioGraba = MyBase.Columns("UsuarioGraba")
            Me.columnUsuarioPara = MyBase.Columns("UsuarioPara")
            Me.columnPersonaLlama = MyBase.Columns("PersonaLlama")
            Me.columnLugar = MyBase.Columns("Lugar")
            Me.columnTelefono = MyBase.Columns("Telefono")
            Me.columnEMail = MyBase.Columns("EMail")
            Me.columnCliente = MyBase.Columns("Cliente")
            Me.columnObservaciones = MyBase.Columns("Observaciones")
            Me.columnSePasoLlamada = MyBase.Columns("SePasoLlamada")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnFecha = New Global.System.Data.DataColumn("Fecha", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFecha)
            Me.columnHora = New Global.System.Data.DataColumn("Hora", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHora)
            Me.columnUsuarioGraba = New Global.System.Data.DataColumn("UsuarioGraba", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUsuarioGraba)
            Me.columnUsuarioPara = New Global.System.Data.DataColumn("UsuarioPara", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUsuarioPara)
            Me.columnPersonaLlama = New Global.System.Data.DataColumn("PersonaLlama", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPersonaLlama)
            Me.columnLugar = New Global.System.Data.DataColumn("Lugar", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLugar)
            Me.columnTelefono = New Global.System.Data.DataColumn("Telefono", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTelefono)
            Me.columnEMail = New Global.System.Data.DataColumn("EMail", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMail)
            Me.columnCliente = New Global.System.Data.DataColumn("Cliente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCliente)
            Me.columnObservaciones = New Global.System.Data.DataColumn("Observaciones", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnObservaciones)
            Me.columnSePasoLlamada = New Global.System.Data.DataColumn("SePasoLlamada", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSePasoLlamada)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewLlamadasRow() As LlamadasRow
            Return CType(Me.NewRow,LlamadasRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New LlamadasRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(LlamadasRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.LlamadasRowChangedEvent) Is Nothing) Then
                RaiseEvent LlamadasRowChanged(Me, New LlamadasRowChangeEvent(CType(e.Row,LlamadasRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.LlamadasRowChangingEvent) Is Nothing) Then
                RaiseEvent LlamadasRowChanging(Me, New LlamadasRowChangeEvent(CType(e.Row,LlamadasRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.LlamadasRowDeletedEvent) Is Nothing) Then
                RaiseEvent LlamadasRowDeleted(Me, New LlamadasRowChangeEvent(CType(e.Row,LlamadasRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.LlamadasRowDeletingEvent) Is Nothing) Then
                RaiseEvent LlamadasRowDeleting(Me, New LlamadasRowChangeEvent(CType(e.Row,LlamadasRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveLlamadasRow(ByVal row As LlamadasRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCorrespondencia = New dsCorrespondencia
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "LlamadasDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class CorrespondenciaRow
        Inherits Global.System.Data.DataRow
        
        Private tableCorrespondencia As CorrespondenciaDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCorrespondencia = CType(Me.Table,CorrespondenciaDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IdFlujoDoc() As String
            Get
                Try 
                    Return CType(Me(Me.tableCorrespondencia.IdFlujoDocColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IdFlujoDoc' in table 'Correspondencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCorrespondencia.IdFlujoDocColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Flujo() As String
            Get
                Try 
                    Return CType(Me(Me.tableCorrespondencia.FlujoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Flujo' in table 'Correspondencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCorrespondencia.FlujoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Comentario() As String
            Get
                Try 
                    Return CType(Me(Me.tableCorrespondencia.ComentarioColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Comentario' in table 'Correspondencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCorrespondencia.ComentarioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EstadoFlujo() As String
            Get
                Try 
                    Return CType(Me(Me.tableCorrespondencia.EstadoFlujoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EstadoFlujo' in table 'Correspondencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCorrespondencia.EstadoFlujoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FechaInicia() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCorrespondencia.FechaIniciaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FechaInicia' in table 'Correspondencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCorrespondencia.FechaIniciaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FechaFinaliza() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCorrespondencia.FechaFinalizaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FechaFinaliza' in table 'Correspondencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCorrespondencia.FechaFinalizaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NombreCliente() As String
            Get
                Try 
                    Return CType(Me(Me.tableCorrespondencia.NombreClienteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NombreCliente' in table 'Correspondencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCorrespondencia.NombreClienteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IdUsuarioSolicita() As String
            Get
                Try 
                    Return CType(Me(Me.tableCorrespondencia.IdUsuarioSolicitaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IdUsuarioSolicita' in table 'Correspondencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCorrespondencia.IdUsuarioSolicitaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IdUsuarioDestino() As String
            Get
                Try 
                    Return CType(Me(Me.tableCorrespondencia.IdUsuarioDestinoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IdUsuarioDestino' in table 'Correspondencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCorrespondencia.IdUsuarioDestinoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Direccion() As String
            Get
                Try 
                    Return CType(Me(Me.tableCorrespondencia.DireccionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Direccion' in table 'Correspondencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCorrespondencia.DireccionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Ciudad() As String
            Get
                Try 
                    Return CType(Me(Me.tableCorrespondencia.CiudadColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Ciudad' in table 'Correspondencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCorrespondencia.CiudadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Zona() As String
            Get
                Try 
                    Return CType(Me(Me.tableCorrespondencia.ZonaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Zona' in table 'Correspondencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCorrespondencia.ZonaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CategoriaFlujo() As String
            Get
                Try 
                    Return CType(Me(Me.tableCorrespondencia.CategoriaFlujoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CategoriaFlujo' in table 'Correspondencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCorrespondencia.CategoriaFlujoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TipoFlujo() As String
            Get
                Try 
                    Return CType(Me(Me.tableCorrespondencia.TipoFlujoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TipoFlujo' in table 'Correspondencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCorrespondencia.TipoFlujoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PasoActual() As String
            Get
                Try 
                    Return CType(Me(Me.tableCorrespondencia.PasoActualColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PasoActual' in table 'Correspondencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCorrespondencia.PasoActualColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SiguientePaso() As String
            Get
                Try 
                    Return CType(Me(Me.tableCorrespondencia.SiguientePasoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SiguientePaso' in table 'Correspondencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCorrespondencia.SiguientePasoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FechaPrimerPaso() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCorrespondencia.FechaPrimerPasoColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FechaPrimerPaso' in table 'Correspondencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCorrespondencia.FechaPrimerPasoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FechaUltimoPaso() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCorrespondencia.FechaUltimoPasoColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FechaUltimoPaso' in table 'Correspondencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCorrespondencia.FechaUltimoPasoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IdImpresion() As String
            Get
                Try 
                    Return CType(Me(Me.tableCorrespondencia.IdImpresionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IdImpresion' in table 'Correspondencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCorrespondencia.IdImpresionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FechaImpresion() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCorrespondencia.FechaImpresionColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FechaImpresion' in table 'Correspondencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCorrespondencia.FechaImpresionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FechaEnvio() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCorrespondencia.FechaEnvioColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FechaEnvio' in table 'Correspondencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCorrespondencia.FechaEnvioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IdUsuarioImprime() As String
            Get
                Try 
                    Return CType(Me(Me.tableCorrespondencia.IdUsuarioImprimeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IdUsuarioImprime' in table 'Correspondencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCorrespondencia.IdUsuarioImprimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IdDestinatario() As String
            Get
                Try 
                    Return CType(Me(Me.tableCorrespondencia.IdDestinatarioColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IdDestinatario' in table 'Correspondencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCorrespondencia.IdDestinatarioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DescripcionImpresion() As String
            Get
                Try 
                    Return CType(Me(Me.tableCorrespondencia.DescripcionImpresionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DescripcionImpresion' in table 'Correspondencia' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableCorrespondencia.DescripcionImpresionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Courier() As String
            Get
                Try 
                    Return CType(Me(Me.tableCorrespondencia.CourierColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Courier' in table 'Correspondencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCorrespondencia.CourierColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IdUsuarioEntrega() As String
            Get
                Try 
                    Return CType(Me(Me.tableCorrespondencia.IdUsuarioEntregaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IdUsuarioEntrega' in table 'Correspondencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCorrespondencia.IdUsuarioEntregaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Aseguradora() As String
            Get
                Try 
                    Return CType(Me(Me.tableCorrespondencia.AseguradoraColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Aseguradora' in table 'Correspondencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCorrespondencia.AseguradoraColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NombreDestinatario() As String
            Get
                Try 
                    Return CType(Me(Me.tableCorrespondencia.NombreDestinatarioColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NombreDestinatario' in table 'Correspondencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCorrespondencia.NombreDestinatarioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NombreAttDoc() As String
            Get
                Try 
                    Return CType(Me(Me.tableCorrespondencia.NombreAttDocColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NombreAttDoc' in table 'Correspondencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCorrespondencia.NombreAttDocColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RecibeCorrespondencia() As String
            Get
                Try 
                    Return CType(Me(Me.tableCorrespondencia.RecibeCorrespondenciaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RecibeCorrespondencia' in table 'Correspondencia' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableCorrespondencia.RecibeCorrespondenciaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NombreAseguradora() As String
            Get
                Try 
                    Return CType(Me(Me.tableCorrespondencia.NombreAseguradoraColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NombreAseguradora' in table 'Correspondencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCorrespondencia.NombreAseguradoraColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NombreClienteFlujo() As String
            Get
                Try 
                    Return CType(Me(Me.tableCorrespondencia.NombreClienteFlujoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NombreClienteFlujo' in table 'Correspondencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCorrespondencia.NombreClienteFlujoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TipoDocumento() As String
            Get
                Try 
                    Return CType(Me(Me.tableCorrespondencia.TipoDocumentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TipoDocumento' in table 'Correspondencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCorrespondencia.TipoDocumentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CantidadDocumentos() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCorrespondencia.CantidadDocumentosColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CantidadDocumentos' in table 'Correspondencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCorrespondencia.CantidadDocumentosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FechaPrimerRuteo() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCorrespondencia.FechaPrimerRuteoColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FechaPrimerRuteo' in table 'Correspondencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCorrespondencia.FechaPrimerRuteoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FechaMovimiento() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCorrespondencia.FechaMovimientoColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FechaMovimiento' in table 'Correspondencia' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCorrespondencia.FechaMovimientoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIdFlujoDocNull() As Boolean
            Return Me.IsNull(Me.tableCorrespondencia.IdFlujoDocColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIdFlujoDocNull()
            Me(Me.tableCorrespondencia.IdFlujoDocColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFlujoNull() As Boolean
            Return Me.IsNull(Me.tableCorrespondencia.FlujoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFlujoNull()
            Me(Me.tableCorrespondencia.FlujoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsComentarioNull() As Boolean
            Return Me.IsNull(Me.tableCorrespondencia.ComentarioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetComentarioNull()
            Me(Me.tableCorrespondencia.ComentarioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEstadoFlujoNull() As Boolean
            Return Me.IsNull(Me.tableCorrespondencia.EstadoFlujoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEstadoFlujoNull()
            Me(Me.tableCorrespondencia.EstadoFlujoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFechaIniciaNull() As Boolean
            Return Me.IsNull(Me.tableCorrespondencia.FechaIniciaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFechaIniciaNull()
            Me(Me.tableCorrespondencia.FechaIniciaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFechaFinalizaNull() As Boolean
            Return Me.IsNull(Me.tableCorrespondencia.FechaFinalizaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFechaFinalizaNull()
            Me(Me.tableCorrespondencia.FechaFinalizaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNombreClienteNull() As Boolean
            Return Me.IsNull(Me.tableCorrespondencia.NombreClienteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNombreClienteNull()
            Me(Me.tableCorrespondencia.NombreClienteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIdUsuarioSolicitaNull() As Boolean
            Return Me.IsNull(Me.tableCorrespondencia.IdUsuarioSolicitaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIdUsuarioSolicitaNull()
            Me(Me.tableCorrespondencia.IdUsuarioSolicitaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIdUsuarioDestinoNull() As Boolean
            Return Me.IsNull(Me.tableCorrespondencia.IdUsuarioDestinoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIdUsuarioDestinoNull()
            Me(Me.tableCorrespondencia.IdUsuarioDestinoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDireccionNull() As Boolean
            Return Me.IsNull(Me.tableCorrespondencia.DireccionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDireccionNull()
            Me(Me.tableCorrespondencia.DireccionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCiudadNull() As Boolean
            Return Me.IsNull(Me.tableCorrespondencia.CiudadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCiudadNull()
            Me(Me.tableCorrespondencia.CiudadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsZonaNull() As Boolean
            Return Me.IsNull(Me.tableCorrespondencia.ZonaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetZonaNull()
            Me(Me.tableCorrespondencia.ZonaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCategoriaFlujoNull() As Boolean
            Return Me.IsNull(Me.tableCorrespondencia.CategoriaFlujoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCategoriaFlujoNull()
            Me(Me.tableCorrespondencia.CategoriaFlujoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTipoFlujoNull() As Boolean
            Return Me.IsNull(Me.tableCorrespondencia.TipoFlujoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTipoFlujoNull()
            Me(Me.tableCorrespondencia.TipoFlujoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPasoActualNull() As Boolean
            Return Me.IsNull(Me.tableCorrespondencia.PasoActualColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPasoActualNull()
            Me(Me.tableCorrespondencia.PasoActualColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSiguientePasoNull() As Boolean
            Return Me.IsNull(Me.tableCorrespondencia.SiguientePasoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSiguientePasoNull()
            Me(Me.tableCorrespondencia.SiguientePasoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFechaPrimerPasoNull() As Boolean
            Return Me.IsNull(Me.tableCorrespondencia.FechaPrimerPasoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFechaPrimerPasoNull()
            Me(Me.tableCorrespondencia.FechaPrimerPasoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFechaUltimoPasoNull() As Boolean
            Return Me.IsNull(Me.tableCorrespondencia.FechaUltimoPasoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFechaUltimoPasoNull()
            Me(Me.tableCorrespondencia.FechaUltimoPasoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIdImpresionNull() As Boolean
            Return Me.IsNull(Me.tableCorrespondencia.IdImpresionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIdImpresionNull()
            Me(Me.tableCorrespondencia.IdImpresionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFechaImpresionNull() As Boolean
            Return Me.IsNull(Me.tableCorrespondencia.FechaImpresionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFechaImpresionNull()
            Me(Me.tableCorrespondencia.FechaImpresionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFechaEnvioNull() As Boolean
            Return Me.IsNull(Me.tableCorrespondencia.FechaEnvioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFechaEnvioNull()
            Me(Me.tableCorrespondencia.FechaEnvioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIdUsuarioImprimeNull() As Boolean
            Return Me.IsNull(Me.tableCorrespondencia.IdUsuarioImprimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIdUsuarioImprimeNull()
            Me(Me.tableCorrespondencia.IdUsuarioImprimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIdDestinatarioNull() As Boolean
            Return Me.IsNull(Me.tableCorrespondencia.IdDestinatarioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIdDestinatarioNull()
            Me(Me.tableCorrespondencia.IdDestinatarioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDescripcionImpresionNull() As Boolean
            Return Me.IsNull(Me.tableCorrespondencia.DescripcionImpresionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDescripcionImpresionNull()
            Me(Me.tableCorrespondencia.DescripcionImpresionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCourierNull() As Boolean
            Return Me.IsNull(Me.tableCorrespondencia.CourierColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCourierNull()
            Me(Me.tableCorrespondencia.CourierColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIdUsuarioEntregaNull() As Boolean
            Return Me.IsNull(Me.tableCorrespondencia.IdUsuarioEntregaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIdUsuarioEntregaNull()
            Me(Me.tableCorrespondencia.IdUsuarioEntregaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAseguradoraNull() As Boolean
            Return Me.IsNull(Me.tableCorrespondencia.AseguradoraColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAseguradoraNull()
            Me(Me.tableCorrespondencia.AseguradoraColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNombreDestinatarioNull() As Boolean
            Return Me.IsNull(Me.tableCorrespondencia.NombreDestinatarioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNombreDestinatarioNull()
            Me(Me.tableCorrespondencia.NombreDestinatarioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNombreAttDocNull() As Boolean
            Return Me.IsNull(Me.tableCorrespondencia.NombreAttDocColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNombreAttDocNull()
            Me(Me.tableCorrespondencia.NombreAttDocColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRecibeCorrespondenciaNull() As Boolean
            Return Me.IsNull(Me.tableCorrespondencia.RecibeCorrespondenciaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRecibeCorrespondenciaNull()
            Me(Me.tableCorrespondencia.RecibeCorrespondenciaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNombreAseguradoraNull() As Boolean
            Return Me.IsNull(Me.tableCorrespondencia.NombreAseguradoraColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNombreAseguradoraNull()
            Me(Me.tableCorrespondencia.NombreAseguradoraColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNombreClienteFlujoNull() As Boolean
            Return Me.IsNull(Me.tableCorrespondencia.NombreClienteFlujoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNombreClienteFlujoNull()
            Me(Me.tableCorrespondencia.NombreClienteFlujoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTipoDocumentoNull() As Boolean
            Return Me.IsNull(Me.tableCorrespondencia.TipoDocumentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTipoDocumentoNull()
            Me(Me.tableCorrespondencia.TipoDocumentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCantidadDocumentosNull() As Boolean
            Return Me.IsNull(Me.tableCorrespondencia.CantidadDocumentosColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCantidadDocumentosNull()
            Me(Me.tableCorrespondencia.CantidadDocumentosColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFechaPrimerRuteoNull() As Boolean
            Return Me.IsNull(Me.tableCorrespondencia.FechaPrimerRuteoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFechaPrimerRuteoNull()
            Me(Me.tableCorrespondencia.FechaPrimerRuteoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFechaMovimientoNull() As Boolean
            Return Me.IsNull(Me.tableCorrespondencia.FechaMovimientoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFechaMovimientoNull()
            Me(Me.tableCorrespondencia.FechaMovimientoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class ImagenesRow
        Inherits Global.System.Data.DataRow
        
        Private tableImagenes As ImagenesDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableImagenes = CType(Me.Table,ImagenesDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Logo() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableImagenes.LogoColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Logo' in table 'Imagenes' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImagenes.LogoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sello() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableImagenes.SelloColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sello' in table 'Imagenes' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImagenes.SelloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Logo2() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableImagenes.Logo2Column),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Logo2' in table 'Imagenes' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImagenes.Logo2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLogoNull() As Boolean
            Return Me.IsNull(Me.tableImagenes.LogoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLogoNull()
            Me(Me.tableImagenes.LogoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSelloNull() As Boolean
            Return Me.IsNull(Me.tableImagenes.SelloColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSelloNull()
            Me(Me.tableImagenes.SelloColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLogo2Null() As Boolean
            Return Me.IsNull(Me.tableImagenes.Logo2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLogo2Null()
            Me(Me.tableImagenes.Logo2Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class LlamadasRow
        Inherits Global.System.Data.DataRow
        
        Private tableLlamadas As LlamadasDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableLlamadas = CType(Me.Table,LlamadasDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Fecha() As Date
            Get
                Try 
                    Return CType(Me(Me.tableLlamadas.FechaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Fecha' in table 'Llamadas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLlamadas.FechaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Hora() As Date
            Get
                Try 
                    Return CType(Me(Me.tableLlamadas.HoraColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Hora' in table 'Llamadas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLlamadas.HoraColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UsuarioGraba() As String
            Get
                Try 
                    Return CType(Me(Me.tableLlamadas.UsuarioGrabaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UsuarioGraba' in table 'Llamadas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLlamadas.UsuarioGrabaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UsuarioPara() As String
            Get
                Try 
                    Return CType(Me(Me.tableLlamadas.UsuarioParaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UsuarioPara' in table 'Llamadas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLlamadas.UsuarioParaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PersonaLlama() As String
            Get
                Try 
                    Return CType(Me(Me.tableLlamadas.PersonaLlamaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PersonaLlama' in table 'Llamadas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLlamadas.PersonaLlamaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Lugar() As String
            Get
                Try 
                    Return CType(Me(Me.tableLlamadas.LugarColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Lugar' in table 'Llamadas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLlamadas.LugarColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Telefono() As String
            Get
                Try 
                    Return CType(Me(Me.tableLlamadas.TelefonoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Telefono' in table 'Llamadas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLlamadas.TelefonoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EMail() As String
            Get
                Try 
                    Return CType(Me(Me.tableLlamadas.EMailColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMail' in table 'Llamadas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLlamadas.EMailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Cliente() As String
            Get
                Try 
                    Return CType(Me(Me.tableLlamadas.ClienteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Cliente' in table 'Llamadas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLlamadas.ClienteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Observaciones() As String
            Get
                Try 
                    Return CType(Me(Me.tableLlamadas.ObservacionesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Observaciones' in table 'Llamadas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLlamadas.ObservacionesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SePasoLlamada() As String
            Get
                Try 
                    Return CType(Me(Me.tableLlamadas.SePasoLlamadaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SePasoLlamada' in table 'Llamadas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLlamadas.SePasoLlamadaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFechaNull() As Boolean
            Return Me.IsNull(Me.tableLlamadas.FechaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFechaNull()
            Me(Me.tableLlamadas.FechaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHoraNull() As Boolean
            Return Me.IsNull(Me.tableLlamadas.HoraColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHoraNull()
            Me(Me.tableLlamadas.HoraColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUsuarioGrabaNull() As Boolean
            Return Me.IsNull(Me.tableLlamadas.UsuarioGrabaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUsuarioGrabaNull()
            Me(Me.tableLlamadas.UsuarioGrabaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUsuarioParaNull() As Boolean
            Return Me.IsNull(Me.tableLlamadas.UsuarioParaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUsuarioParaNull()
            Me(Me.tableLlamadas.UsuarioParaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPersonaLlamaNull() As Boolean
            Return Me.IsNull(Me.tableLlamadas.PersonaLlamaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPersonaLlamaNull()
            Me(Me.tableLlamadas.PersonaLlamaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLugarNull() As Boolean
            Return Me.IsNull(Me.tableLlamadas.LugarColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLugarNull()
            Me(Me.tableLlamadas.LugarColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTelefonoNull() As Boolean
            Return Me.IsNull(Me.tableLlamadas.TelefonoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTelefonoNull()
            Me(Me.tableLlamadas.TelefonoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEMailNull() As Boolean
            Return Me.IsNull(Me.tableLlamadas.EMailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEMailNull()
            Me(Me.tableLlamadas.EMailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsClienteNull() As Boolean
            Return Me.IsNull(Me.tableLlamadas.ClienteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetClienteNull()
            Me(Me.tableLlamadas.ClienteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsObservacionesNull() As Boolean
            Return Me.IsNull(Me.tableLlamadas.ObservacionesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetObservacionesNull()
            Me(Me.tableLlamadas.ObservacionesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSePasoLlamadaNull() As Boolean
            Return Me.IsNull(Me.tableLlamadas.SePasoLlamadaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSePasoLlamadaNull()
            Me(Me.tableLlamadas.SePasoLlamadaColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class CorrespondenciaRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CorrespondenciaRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As CorrespondenciaRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As CorrespondenciaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class ImagenesRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ImagenesRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As ImagenesRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As ImagenesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class LlamadasRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As LlamadasRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As LlamadasRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As LlamadasRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
