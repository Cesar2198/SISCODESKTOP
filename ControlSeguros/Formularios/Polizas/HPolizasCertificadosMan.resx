<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        E/09G/H9zT//2Q==
</value>
  </data>
  <data name="btnBuscarCliente.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vAAADrwBlbxySQAAAo5JREFUOE+VkclPU1EUh7vQYEyMcYEx0bgwUQmJCX+AC4eVK42yJgImULQhhZCI
        KA0sHBgSBxCVQbBg6UOgtkIDhdIChdpWShk7vbZQKLQKBdoHNoH3s69eQxpixG9z7rv3fOfdew7vDyzL
        Jsy5/SU269yY3eqlHfZ5S49SXU5RqqMk5e/4fD+SzWYnI+l2o1PrR69xHR3qZUi6PRgzOXbS0jIuk9S9
        cH+2WFxM05cFOH0RWL0/YV3YikXncgS1Mi8mxl3g8/lniBKPm14sEctdMLs2YXQwMDnDGHMyGHcxmPBs
        4quNQeUHGtlZuXKixMO9uV7hg24mhOHpMEZnwxiaDqFKEcDTNj9KJUu4W2FnB/r0EZFIdIhou1hn5+nq
        z35opzYwNMkVCaFRtYJa5XfUdAXwUh5AbpWHNertEAqzThJtF4d9zlJQRaN1cBWykSCo4VV06NbQrgtC
        ol1FY98Kit7SrFIxui0QCBKJtktPj6b8NeVAy0AQXYZ19I9vQDMRisVu03q0yBqqm23I4d//RpR4uDkb
        9NadimY3NJMMzPRmtHlbsaZqp8J41uTY6VKYWLG4HXV10naixcPNWT9qg1jhgVS1xCoNQVba62NrKTtk
        nV/ZsrI3mPeuQP6+Eq9K84qIFg8354z0e3JZ52CkTzUFaat2OzNdaKxv+IQ2So2a4kwszoxgSPoCTwru
        PCDaXrhRcd3Oz88+zn1n8x9+zLuRAkp0E73vCuGd1kPTUoFS4e3CmLAfkk4k5NTlXoXk0S30NxRjYdYQ
        jSW4mJKcSlL+TVLigViRVlEq1I0i6Jof48KpIzXkeH/EbiK4AknRdWRcOh2Ibp3/ffIfHDvMu3Y28eDz
        6PIcj8fj/QLOyLDfKBI3SAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="btnImprimir.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vAAADrwBlbxySQAABMxJREFUWEe9l91P22UUx/kjvPXSCxMvvPDCC2+MF4sxuqjLFBKWbDKDDCJDNjaK
        gNsUGJsLJTiaMWFz4pDxslFEoZB1LS9dN9pSoKVQRkc7KKVAW6hQS7/+zpFfVyr2hXQ+yQn9pS+fz3PO
        8zznIS3ZkSGR40DuHew8/j+jsnEIOVUDuCmfgGnGBdkdPSrqu168xNk6FRo6x6EzO7GysgGn0wu7fRWz
        s8s4dPoFZYFmJ20Zw4hxAaueP+H1bjJ8aXk9LGCzuVHZpEmtwLVOMxQPHVj1BrC9HcLmVhB+f+A/BfqH
        Z5FV3pE6CVn7JDzrWwxPRIAi+7ve1GZBbVhMWIDWQbtiCsVX7qVOgmqfjAC9TpekUKCl1wS9ZTlhAYqa
        5kepLUOTfCopgTHTIj442Y70EgM+KRpF5lfDuCgz7F+KtqFjaT1hgT8mfCju8yOzbQtvfWPHe5V2ZF0Y
        x8EsJYorR/Yn0tpvjSugtPhQrQ3ijBo40Q+8X+vCm5KneC1/Fq/kPYGkbQ25Eg2yCvqTlzjfoOEtGS1g
        d6xheM6PG6ZthpeNALk9ARySuXn2b5yx4dU8K17+zIKXMs2QTwb2L6F6PL9LQO/cQocthEYLUGMIoWRg
        C8dve/BRnQsHqhdY4PVTczz7kzeFHbIUwl9B8MH24dF9ZoEEZrxBPFgOocsB3JoJ8cwLuzcYnt7g5tS/
        U/GMBcq6fGEwhX8zxHG9eRrpWd2JScjarCi6OgO50YXxTWB4DVAsPYfTgjvR5sOxW2ucepKou+9nsAik
        WPcjHE53CG8flMcXyKk249x1G6aXgrAKMxjdAM9ehJ9TBXj2JEDRagjA5X0OovCu74414X3aVRmf98UW
        OPuDRWi9KxjUAUN6YOZpCAbfP7OnmpMA1Z0kaHEROBoUHZQVpcqBltaJ+AJfVJmgGPQxXDse4iAJygAJ
        yAzb0DpCe4Lcnt1hexYMg9UaF8rsl/BpXpwjmw6PAZUTSqHoOjPCQfWjkkRDIoM+QyGCW9vNDKbnRzo3
        akxNOJx9N74AzVo5vMJBcOP0NmchGhQde4EfG1Ygu6ZFUVE3l+JYrjK+gAglAcoGvTY/CfIPRALpmYLk
        CHyv2xoB9qDphg75X//OPeLj03ehGfUkJkBAEUpfUijt/Jp+WIRSTFg20Dswz2ACiuBfbhtRUjmA4+d7
        uUuOmRZABxrdpN89EqcER0v1nAEC0swo9EKjIZAoIYLlPXMMFD/TIVznLtQMoeD7B2junuAjm/uG8Jf6
        xqR5EeX1ahRcjCFRLB3HqUuT4boTMBJK2SAwZUYE03Ptj1r+8c77s9wvdjWuHQGxc5JczrcxTsT8C1qW
        EOsuBgHFGZMQyTQKt6fLP+nQp5nnfrFn54wSoOhSTPPa2EH+exQKPbygwsigyIVHcBKjxUYXWJV+gVt2
        zMtLlADdNegKV14b55+a8itDOFKo4TSLW5AEqDy0O6TNRhaIe38UBCiu/jrKuyEuOHKQREbBEEvQaUez
        p0VK6af9LZE+5LrHEqD3M0t/i734Yo3S6kGk56q5HHRIVddbeT+L53pd8yDo9hR5efF4/MJnF3gr7hsc
        PQ5nK/lSsVdDaWgbweWfdQw3TC2B7hFfVvWkBpzMKJSqUSxVJAlOS/sbQ5vwEAEOyfUAAAAASUVORK5C
        YII=
</value>
  </data>
</root>